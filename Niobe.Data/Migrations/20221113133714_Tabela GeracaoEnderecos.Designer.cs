// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Niobe.Data;

namespace Niobe.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221113133714_Tabela GeracaoEnderecos")]
    partial class TabelaGeracaoEnderecos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Niobe.Core.Armazem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("IdFilial")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdFilial");

                    b.ToTable("Armazems");
                });

            modelBuilder.Entity("Niobe.Core.Bloco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("EnderecoFisico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("IdNivel")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdNivel");

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("Niobe.Core.Coluna", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("IdRua")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdRua");

                    b.ToTable("Colunas");
                });

            modelBuilder.Entity("Niobe.Core.Filial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Niobe.Core.GeradorEnderecos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("BlocoAB")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CodigoBloco")
                        .HasColumnType("text");

                    b.Property<string>("CodigoColuna")
                        .HasColumnType("text");

                    b.Property<string>("CodigoNivel")
                        .HasColumnType("text");

                    b.Property<string>("CodigoRua")
                        .HasColumnType("text");

                    b.Property<bool>("GeracaoCompletada")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("IdArmazem")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeBloco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeColuna")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeNivel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeRua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OrdemBloco")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdemColuna")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdemNivel")
                        .HasColumnType("bigint");

                    b.Property<long>("OrdemRua")
                        .HasColumnType("bigint");

                    b.Property<string>("PadraoEndereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("QuantidadeBloco")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantidadeColuna")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantidadeNivel")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantidadeRua")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoColuna")
                        .HasColumnType("int");

                    b.Property<int>("TipoNivel")
                        .HasColumnType("int");

                    b.Property<int>("TipoRua")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeradorEndereços");
                });

            modelBuilder.Entity("Niobe.Core.Nivel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("IdColuna")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdColuna");

                    b.ToTable("Nivel");
                });

            modelBuilder.Entity("Niobe.Core.Rua", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("IdArmazem")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<long>("Ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdArmazem");

                    b.ToTable("Ruas");
                });

            modelBuilder.Entity("Niobe.Core.Armazem", b =>
                {
                    b.HasOne("Niobe.Core.Filial", "Filial")
                        .WithMany("Armazens")
                        .HasForeignKey("IdFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Niobe.Core.Bloco", b =>
                {
                    b.HasOne("Niobe.Core.Nivel", "Nivel")
                        .WithMany("Blocos")
                        .HasForeignKey("IdNivel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("Niobe.Core.Coluna", b =>
                {
                    b.HasOne("Niobe.Core.Rua", "Rua")
                        .WithMany("Colunas")
                        .HasForeignKey("IdRua")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rua");
                });

            modelBuilder.Entity("Niobe.Core.Nivel", b =>
                {
                    b.HasOne("Niobe.Core.Coluna", "Coluna")
                        .WithMany("Niveis")
                        .HasForeignKey("IdColuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coluna");
                });

            modelBuilder.Entity("Niobe.Core.Rua", b =>
                {
                    b.HasOne("Niobe.Core.Armazem", "Armazem")
                        .WithMany("Ruas")
                        .HasForeignKey("IdArmazem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armazem");
                });

            modelBuilder.Entity("Niobe.Core.Armazem", b =>
                {
                    b.Navigation("Ruas");
                });

            modelBuilder.Entity("Niobe.Core.Coluna", b =>
                {
                    b.Navigation("Niveis");
                });

            modelBuilder.Entity("Niobe.Core.Filial", b =>
                {
                    b.Navigation("Armazens");
                });

            modelBuilder.Entity("Niobe.Core.Nivel", b =>
                {
                    b.Navigation("Blocos");
                });

            modelBuilder.Entity("Niobe.Core.Rua", b =>
                {
                    b.Navigation("Colunas");
                });
#pragma warning restore 612, 618
        }
    }
}
